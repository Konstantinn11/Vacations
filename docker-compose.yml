services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_DB:   ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["/app/entrypoint.sh"]
    command: ["gunicorn", "vacations.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3"]

  nginx:
    image: nginx:1.21.3-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles

volumes:
  pgdata:
  static_volume: